package Lab02;
import java.util.Scanner;
import java.util.concurrent.TimeUnit;
import java.util.Random;

public class Lab2 {

    public static void main(String[] args) throws Exception {
        // Declare amino acid arrays
        String[] SHORT_NAMES = 
        { "A", "R", "N", "D", "C", "Q", "E", 
        "G", "H", "I", "L", "K", "M", "F", 
        "P", "S", "T", "W", "Y", "V" };

        String[] FULL_NAMES = 
        {
        "alanine", "arginine", "asparagine", 
        "aspartic acid", "cysteine",
        "glutamine", "glutamic acid",
        "glycine", "histidine", "isoleucine",
        "leucine", "lysine", "methionine", 
        "phenylalanine", "proline", 
        "serine", "threonine", "tryptophan", 
        "tyrosine", "valine"};

        // Initialize Scanner and Random
        Scanner myReady = new Scanner(System.in);
        Random random = new Random();
        
        // Prompt user to start quiz
        System.out.println("Type the number of problems you would like!");
        System.out.println();
        System.out.println("OR");
        System.out.println();
        System.out.println("Hit Enter OR Type 'Ready' to Start a Timed Quiz!");
        String ready = myReady.nextLine();
        
        // Initialize score
        int score = 0;
        
        if (ready.equalsIgnoreCase("ready") || ready.isEmpty()) {
            System.out.println("Hit Enter to start the default 30-second timed quiz or enter the number of seconds for the quiz:");
            String durationInput = myReady.nextLine().trim();

            int quizDuration;
            if (durationInput.isEmpty()) {
                quizDuration = 30; 
            } else {
                try {
                    quizDuration = Integer.parseInt(durationInput); 
                    if (quizDuration <= 0) {
                        System.out.println("Invalid duration. Defaulting to 30 seconds.");
                        quizDuration = 30;
                    }
                } catch (NumberFormatException e) {
                    System.out.println("Invalid input. Defaulting to 30 seconds.");
                    quizDuration = 30;
                }
            }

            System.out.println("Starting quiz in...");
            for (int i = 5; i > 0; i--) {
                System.out.println(i);
                TimeUnit.SECONDS.sleep(1);
            }
            System.out.println("START! You have " + quizDuration + " seconds to complete the quiz.");

            long currentTime = System.currentTimeMillis();
            long maxTime = currentTime + quizDuration * 1000;

            while (System.currentTimeMillis() < maxTime) {
                int randomIndex = random.nextInt(20); 
                String shortName = SHORT_NAMES[randomIndex];
                String fullName = FULL_NAMES[randomIndex];

                System.out.println("What is the abbreviation for " + fullName + "?");
                String userInput = myReady.nextLine().toUpperCase();

                if (userInput.equals(shortName)) {
                    System.out.println("Correct!");
                    score++;
                } else {
                    System.out.println("Incorrect. The correct answer was " + shortName);
                }
            }

            System.out.println("Time's up!");
            System.out.println("Your score: " + score);
        } else {
            try {
                int value = Integer.parseInt(ready);
                System.out.println("You selected " + value + " problems.");
                
                for (int x = 0; x < value; x++) {
                    int randomIndex = random.nextInt(20); 
                    String shortName = SHORT_NAMES[randomIndex];
                    String fullName = FULL_NAMES[randomIndex];

                    System.out.println("Problem " + (x + 1) + ": What is the abbreviation for " + fullName + "?");
                    String userInput = myReady.nextLine().toUpperCase();

                    if (userInput.equals(shortName)) {
                        System.out.println("Correct!");
                        score++;
                    } else {
                        System.out.println("Incorrect. The correct answer was " + shortName);
                    }
                }
                System.out.println("You completed the quiz with a score of " + score + " out of " + value);
            } catch (NumberFormatException e) {
                System.out.println("Invalid input. Please enter a number or 'Ready'.");
            }
        }

        myReady.close();
    }
}
//One very noticeable difference between this program and one generated by ChatGPT is the different way of storing the amino acids and their corresponding single letter codes. Although both work in this example
//I believe that the AI generated code is a bit less organized and certainly more typing for the user. Although if this list was changing in any way their choice would be 
//a better choice to prevent errors when editing the code for future updates. Since these 20 standard amino acids arent changing the list is not updated lowering the chance of error for a user of this program
//a different package for time was used (.sleep) which upon googling halts the thread from executing which i assume could be a better choice when multithreading is needed
//alot of the syntax was similar which shows my program likely is fairly optimized and readable for most users 
